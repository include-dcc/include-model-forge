{
  "resourceType": "StructureDefinition",
  "id": "IncludeLogicalDataset",
  "url": "https://include-dcc.github.io/include-model-forge/StructureDefinition/IncludeLogicalDataset",
  "name": "IncludeDataset",
  "title": "Information about a specific grouping of data files",
  "status": "draft",
  "description": "Information about a specific grouping of data files",
  "fhirVersion": "4.0.1",
  "kind": "logical",
  "abstract": false,
  "type": "https://include-dcc.github.io/include-model-forge/StructureDefinition/IncludeLogicalDataset",
  "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Base",
  "derivation": "specialization",
  "differential": {
    "element": [
      {
        "id": "IncludeLogicalDataset",
        "path": "IncludeLogicalDataset",
        "short": "Information about a specific grouping of data files",
        "definition": "Information about a specific grouping of data files"
      },
      {
        "id": "IncludeLogicalDataset.studyCode",
        "path": "IncludeLogicalDataset.studyCode",
        "short": "Unique identifer for the study (generally a short acronym)",
        "definition": "Unique identifer for the study (generally a short acronym)",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.datasetName",
        "path": "IncludeLogicalDataset.datasetName",
        "short": "Full name of the dataset, provided by contributor",
        "definition": "Full name of the dataset, provided by contributor",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.datasetDescription",
        "path": "IncludeLogicalDataset.datasetDescription",
        "short": "Brief additional notes about the dataset (1-3 sentences) that are not already captured in the other fields",
        "definition": "Brief additional notes about the dataset (1-3 sentences) that are not already captured in the other fields",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.datasetGlobalId",
        "path": "IncludeLogicalDataset.datasetGlobalId",
        "short": "Unique Global ID for dataset, generated by DCC",
        "definition": "Unique Global ID for dataset, generated by DCC",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.datasetExternalId",
        "path": "IncludeLogicalDataset.datasetExternalId",
        "short": "Unique identifier or code for dataset, if provided by contributor",
        "definition": "Unique identifier or code for dataset, if provided by contributor",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.expectedNumberOfParticipants",
        "path": "IncludeLogicalDataset.expectedNumberOfParticipants",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "integer"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.expectedNumberOfFiles",
        "path": "IncludeLogicalDataset.expectedNumberOfFiles",
        "short": "Expected number of files associated with this dataset, including dictionaries. If additional explanation is needed, please add to Dataset Description field.",
        "definition": "Expected number of files associated with this dataset, including dictionaries. If additional explanation is needed, please add to Dataset Description field.",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "integer"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.dataCollectionStartYear",
        "path": "IncludeLogicalDataset.dataCollectionStartYear",
        "short": "Year that data collection started",
        "definition": "Year that data collection started",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.dataCollectionEndYear",
        "path": "IncludeLogicalDataset.dataCollectionEndYear",
        "short": "Year that data collection ended",
        "definition": "Year that data collection ended",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.dataCategory",
        "path": "IncludeLogicalDataset.dataCategory",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "extensible",
          "valueSet": "https://include-dcc.github.io/include-model-forge/ValueSet/enum-dataCategory-vs"
        }
      },
      {
        "id": "IncludeLogicalDataset.dataType",
        "path": "IncludeLogicalDataset.dataType",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.experimentalStrategy",
        "path": "IncludeLogicalDataset.experimentalStrategy",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.experimentalPlatform",
        "path": "IncludeLogicalDataset.experimentalPlatform",
        "short": "Specific platform used to perform experiment; pipe-separated if multiple (e.g. SOMAscan, MSD, Luminex, Illumina)",
        "definition": "Specific platform used to perform experiment; pipe-separated if multiple (e.g. SOMAscan, MSD, Luminex, Illumina)",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.publication",
        "path": "IncludeLogicalDataset.publication",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "uri"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.accessLimitations",
        "path": "IncludeLogicalDataset.accessLimitations",
        "short": "Data access limitations, as defined in the GA4GH Data Use Ontology (DUO; can list more than one, pipe separated)",
        "definition": "Data access limitations, as defined in the GA4GH Data Use Ontology (DUO; can list more than one, pipe separated)",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.accessRequirements",
        "path": "IncludeLogicalDataset.accessRequirements",
        "short": "Data access requirements, as defined in the GA4GH Data Use Ontology (DUO; can list more than one, pipe separated)",
        "definition": "Data access requirements, as defined in the GA4GH Data Use Ontology (DUO; can list more than one, pipe separated)",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.dbgap",
        "path": "IncludeLogicalDataset.dbgap",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.otherRepository",
        "path": "IncludeLogicalDataset.otherRepository",
        "short": "URL if dataset is already deposited in a public repository other than dbGaP (e.g. LONI, Metabolomics Workbench, etc.)",
        "definition": "URL if dataset is already deposited in a public repository other than dbGaP (e.g. LONI, Metabolomics Workbench, etc.)",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "uri"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.otherAccessAuthority",
        "path": "IncludeLogicalDataset.otherAccessAuthority",
        "short": "Email or URL for dataset's Access Authority, if not dbGaP",
        "definition": "Email or URL for dataset's Access Authority, if not dbGaP",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "id": "IncludeLogicalDataset.isHarmonized",
        "path": "IncludeLogicalDataset.isHarmonized",
        "short": "For omics datasets, is this Dataset already harmonized and available in the INCLUDE Data Hub?",
        "definition": "For omics datasets, is this Dataset already harmonized and available in the INCLUDE Data Hub?",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "boolean"
          }
        ]
      }
    ]
  }
}
